{
	"clazz": "net.bzk.flow.model.Flow",
	"uid": "ebBli92LdIYagOo7",
	"logEncryptKey": "1234567890123456",
	"vars": {
		"balance": 999
	},
	"threadCfg": {
		"corePoolSize": 10,
		"maximumPoolSize": 50,
		"keepAliveTime": 500,
		"aliveUnit": "MINUTES"
	},
	"name": "FundRange",
	"boxs": [
		{
			"clazz": "net.bzk.flow.model.Box",
			"uid": "VzPzT54lux1a8rsJ",
			"name": "CheckCanFund",
			"actions": [
				{
					"clazz": "net.bzk.flow.model.HttpAction",
					"uid": "hMkckxJbBokG",
					"name": "GetFundingHistory",
					"tryErrorble": false,
					"url": "\"https://api-pub.bitfinex.com/v2/book/fUSD/P1?len=100\"",
					"method": "\"GET\"",
					"uriVariables": {
						
					},
					"body": {
						
					},
					"headers": {
						
					},
					"headersFlat": "{}",
					"key": {
						"lv": "run_flow",
						"key": "fundHistory"
					}
				},
				{
					"clazz": "net.bzk.flow.model.Action$JSONPathAction",
					"uid": "WeQXyQMvSBi5",
					"name": "trimToList",
					"tryErrorble": false,
					"syntax": "$.[*][0]",
					"source": {
						"lv": "not_specify",
						"key": "fundHistory"
					},
					"target": {
						"lv": "not_specify",
						"key": "fundHistory"
					}
				},
				{
					"clazz": "net.bzk.flow.model.Action$PolyglotAction",
					"uid": "1pfZVtQ4gnmO",
					"name": "GetTopRow",
					"tryErrorble": false,
					"code": "const list= ${fundHistory};\r\nlet mx = Math.max.apply(Math, list);\r\nlet mn = Math.min.apply(Math, list);\r\nmn = (mx+mn)/2;\r\nconst dr = mx-mn;\r\n\r\nlet cusd = ${balance};\r\nlet spcount = Math.round( (cusd-50) /100);\r\nlet rp = dr/spcount;\r\n\r\n\r\nconst batchList = [];\r\n\r\nfor(let i=0;i<spcount;i++){\r\n    const b = {\r\n        rate: mn+ ((i+1) *rp),\r\n        day: i+2,\r\n        amount:100 \r\n    };\r\n    batchList.push(b);\r\n}\r\nbatchList.push({\r\n        rate: mn,\r\n        day: 2,\r\n        amount:cusd-(spcount*100) \r\n});\r\n\r\n\r\n// const ans={\r\n//     max:mx,\r\n//     min:mn,\r\n//     rp: rp,\r\n//     spcount:spcount,\r\n//     rate: mn+ ((1+1) *rp)\r\n\r\n// };\r\nbatchList;\r\n// ans;",
					"polyglot": "js",
					"resultLv": "not_specify",
					"resultKey": "bfx.fund.strategy"
				}
			],
			"links": [],
			"vars": {
				
			},
			"taskSort": [
				"hMkckxJbBokG",
				"WeQXyQMvSBi5",
				"1pfZVtQ4gnmO"
			],
			"transition": {
				"toBox": "",
				"endTag": "DONE_ANS",
				"endResultKeys": [
					{
						"lv": "not_specify",
						"key": "bfx.fund.strategy"
					}
				]
			},
			"whileJudgment": null
		}
	],
	"entry": {
		"clazz": "net.bzk.flow.model.Entry$PluginEntry",
		"requiredKeys": [
			"balance"
		],
		"boxUid": "VzPzT54lux1a8rsJ"
	}
}
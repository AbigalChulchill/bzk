jwt:
    secret: javainuse
spring:
    datasource:
        driver-class-name: org.postgresql.Driver
        password: root
        testWhileIdle: true
        url: jdbc:postgresql://db:5432/postgres
        username: root
        validationQuery: SELECT 1
    jpa:
        show-sql: false
        hibernate:
            ddl-auto: create
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        database: postgresql
        properties:
            hibernate:
              temp:
                use_jdbc_metadata_defaults: false;
        database-platform: org.hibernate.dialect.PostgreSQL9Dialect

    security:
      oauth2:
        client:
          registration:
            google:
              clientId: TODO
              clientSecret: TODO
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: TODO
              clientSecret: TODO
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
              scope:
                - email
                - public_profile
            github:
              clientId: TODO
              clientSecret: TODO
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: TODO
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - https://p2c.domiearth.com/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
bzk:
  auth:
    default:
      username: admin
      password: admin    

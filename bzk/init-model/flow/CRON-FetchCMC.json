{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "WD9C43w3dAL2",
  "name" : "CRON-FetchCMC",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "ajyASBWbeZV6",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "Jj7CsxrbKdSm",
      "name" : "ListQuote",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "url" : "!javascript===\r\nvar dat = new Date();\r\nvar nowIso = dat.toISOString();\r\ndat.setSeconds(dat.getSeconds() - 2*24*60*60);\r\nvar startIso = dat.toISOString();\r\n\r\nconst symbols = ${symbols};\r\nconst sblstr = symbols.join(',');\r\nconst url_temp ='https://web-api.coinmarketcap.com/v1/cryptocurrency/ohlcv/historical?convert=USD&time_end='+nowIso+'&time_start='+startIso+'&symbol='+sblstr;\r\nurl_temp;",
      "uriVariables" : { },
      "body" : "{}",
      "method" : "GET",
      "headers" : { },
      "headersFlat" : "{}",
      "key" : {
        "lv" : "not_specify",
        "key" : "cmcResponse"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$EventAction",
      "uid" : "THy7T41cesZH",
      "name" : "Event",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "data" : "CronFetchCMC"
    }, {
      "clazz" : "net.bzk.flow.model.Action$JSONPathAction",
      "uid" : "Wo9WX1K0rNTv",
      "name" : "ParseQuote",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "syntax" : "$.data.*",
      "source" : {
        "lv" : "not_specify",
        "key" : "cmcResponse"
      },
      "target" : {
        "lv" : "not_specify",
        "key" : "quotes"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$PolyglotAction",
      "uid" : "P0OAGpTL69JZ",
      "name" : "PackPayload",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "code" : "const list= ${quotes};\nconst ans = [];\n\nfor (const q of list) {\n    open = q['quote']['USD']['open'];\n    ans.push(genPointDto('open',open,q));\n\n    high = q['quote']['USD']['high'];\n    ans.push(genPointDto('high',high,q));\n\n    low = q['quote']['USD']['low'];\n    ans.push(genPointDto('low',low,q));\n\n    close = q['quote']['USD']['close'];\n    ans.push(genPointDto('close',close,q));    \n\n    volume = q['quote']['USD']['volume'];\n    ans.push(genPointDto('volume',volume,q));       \n\n\n    market_cap = q['quote']['USD']['market_cap'];\n    ans.push(genPointDto('market_cap',market_cap,q));            \n\n\n}\n\n\n\nfunction genPointDto(fd,v,q){\n  const row = {\n      measurement : 'daily',\n      tags:{\n        symbol : q['symbol'],\n        name : q['name'],\n        category:'cryptocurrency',\n        source:'coinmarketcap'\n      },\n      valmean: fd,\n      val:v,\n      time :q['timestamp']\n  };\n  return row;\n}\n\nans;\n",
      "polyglot" : "js",
      "resultLv" : "not_specify",
      "resultKey" : "packPayload"
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "OFNh917ZZjFo",
      "name" : "Submit",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "url" : "${finProxyUrl}/proxy/tsdb/insert/multiple",
      "uriVariables" : { },
      "body" : "${packPayload}",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "insertDBResult"
      }
    } ],
    "links" : [ ],
    "vars" : { },
    "taskSort" : [ "Jj7CsxrbKdSm", "Wo9WX1K0rNTv", "P0OAGpTL69JZ", "OFNh917ZZjFo", "THy7T41cesZH" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "DONE",
      "failEnd" : false,
      "endResultKeys" : [ ],
      "resultCode" : ""
    },
    "minLogLv" : "DEBUG"
  } ],
  "varCfgNames" : [ "fin-proxy.json", "coinmarketcap.json", "crypto-symbol.json" ],
  "vars" : { },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$FixedRateEntry",
    "boxUid" : "ajyASBWbeZV6",
    "autoRegister" : true,
    "period" : 24,
    "unit" : "HOURS",
    "initialDelay" : 0
  },
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  },
  "version" : 10
}
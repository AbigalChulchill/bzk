{
  "clazz": "net.bzk.flow.model.Flow",
  "uid": "hMVIvtI9umAB",
  "logEncryptKey": "1234567890123456",
  "vars": {
    "symbol": "BTC"
  },
  "varCfgNames": [
    "binance.json"
  ],
  "threadCfg": {
    "corePoolSize": 10,
    "maximumPoolSize": 50,
    "keepAliveTime": 500,
    "aliveUnit": "MINUTES"
  },
  "name": "ShortBuyBinance",
  "boxs": [
    {
      "clazz": "net.bzk.flow.model.Box",
      "uid": "8CVBFRAIwESi",
      "name": "OrderBuy",
      "actions": [
        {
          "clazz": "net.bzk.flow.model.Action$SubFlowAction",
          "uid": "MNAAARnHaCb3",
          "name": "OrderPost",
          "tryErrorble": false,
          "devBoxVars": {},
          "devFlowVars": {},
          "asynced": false,
          "inputData": [
            {
              "key": "investedRate",
              "val": "0.01"
            },
            {
              "key": "guardRange",
              "val": "0.00568"
            },
            {
              "key": "symbol",
              "val": "${symbol}"
            },
            {
              "key": "selled",
              "val": "false"
            },
            {
              "key": "currentMove",
              "val": "0.002668"
            },
            {
              "key": "tags",
              "val": "[\"shortTermBuy\"]"
            }
          ],
          "outputReflects": [],
          "flowUid": "02eQyaMwyojZ"
        }
      ],
      "links": [],
      "vars": {},
      "taskSort": [
        "MNAAARnHaCb3"
      ],
      "transition": {
        "toBox": "",
        "failEnd": false,
        "endTag": "END",
        "endResultKeys": []
      },
      "whileJudgment": null
    },
    {
      "clazz": "net.bzk.flow.model.Box",
      "uid": "m7IzQZV5oOJ5",
      "name": "6hMinCheck",
      "actions": [
        {
          "clazz": "net.bzk.flow.model.Action$SubFlowAction",
          "uid": "K3NAnx4H5Fdu",
          "name": "Get6hMinAvg",
          "tryErrorble": false,
          "devBoxVars": {},
          "devFlowVars": {},
          "asynced": false,
          "inputData": [
            {
              "key": "tsdbQuery",
              "val": "t1 = from(bucket: \"quote\")\n  |> range(start: -12h)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r._field == \"price\" and\n    r.symbol == \"${symbol}\" \n  )\n  |> map(fn: (r) => ({ r with cp: r._value   }))\n  |>movingAverage(n: 36)\n  |> map(fn: (r) => ({ r with _value: (r.cp-r._value)/r._value   }))\n  |> map(fn: (r) => ({ r with _value:if r._value >0.00 then 0.00 else r._value   }))\n  |> window(every: 3h)\n  |> min()   \n  |> window(every: inf)\n  |>movingAverage(n: 6)\n\nt1"
            },
            {
              "key": "vaildMins",
              "val": "!javascript===\n(6*60)+5"
            }
          ],
          "outputReflects": [
            {
              "srcKey": "nearVal",
              "toKey": {
                "lv": "not_specify",
                "key": "thline"
              }
            }
          ],
          "flowUid": "9RLQvpmbGa35"
        }
      ],
      "links": [
        {
          "clazz": "net.bzk.flow.model.Link",
          "uid": "YL0vuWiE5hZt",
          "name": "6hMinTest",
          "transition": {
            "toBox": "",
            "failEnd": false,
            "endTag": "6hMinNotPass",
            "endResultKeys": []
          },
          "condition": {
            "clazz": "net.bzk.flow.model.Condition$ConditionNum",
            "kind": "NONE",
            "left": "${priceBais.val}",
            "right": "!javascript===\n${thline.val}*1.268;",
            "type": "greater_equal",
            "next": null
          }
        }
      ],
      "vars": {},
      "taskSort": [
        "K3NAnx4H5Fdu",
        "YL0vuWiE5hZt"
      ],
      "transition": {
        "toBox": "8CVBFRAIwESi",
        "failEnd": false,
        "endTag": null,
        "endResultKeys": []
      },
      "whileJudgment": null
    },
    {
      "clazz": "net.bzk.flow.model.Box",
      "uid": "1HMjdDMRjAJ0",
      "name": "1HPriceBais",
      "actions": [
        {
          "clazz": "net.bzk.flow.model.HttpAction",
          "uid": "OcPQy555y0Gn",
          "name": "cancel_by_filter",
          "tryErrorble": false,
          "devBoxVars": {},
          "devFlowVars": {},
          "url": "${binance.proxyHost}proxy",
          "method": "POST",
          "uriVariables": {},
          "body": "!javascript===\r\nconst payload= {\r\n  \"name\": \"cancel_by_filter\",\r\n  \"apiKey\": \"${binance.key}\",\r\n  \"secret\": \"${binance.secret}\",\r\n  \"symbol\": \"${symbol}\"\r\n};\r\n\r\nconst pinfolist = ${posInfo};\r\nconst amt = pinfolist[0].positionAmt;\r\nif(amt>0){\r\n    payload['notOrderType']='STOP_MARKET';\r\n}\r\n\r\npayload;",
          "headers": {},
          "headersFlat": "",
          "key": {
            "lv": "not_specify",
            "key": "postResult"
          }
        },
        {
          "clazz": "net.bzk.flow.model.Action$SubFlowAction",
          "uid": "SiPyHUcTzl1K",
          "name": "Get1HPriceBais",
          "tryErrorble": false,
          "devBoxVars": {},
          "devFlowVars": {},
          "asynced": false,
          "inputData": [
            {
              "key": "tsdbQuery",
              "val": "t1 = from(bucket: \"quote\")\r\n  |> range(start: -60h)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"realtime\" and\r\n    r._field == \"price\" and\r\n    r.symbol == \"${symbol}\" \r\n  )\r\n  |> map(fn: (r) => ({ r with cp: r._value   }))\r\n  |>movingAverage(n: 12)\r\n  |> map(fn: (r) => ({ r with _value: (r.cp-r._value)/r._value   }))\r\n\r\nt1"
            },
            {
              "key": "vaildMins",
              "val": "25"
            }
          ],
          "outputReflects": [
            {
              "srcKey": "nearVal",
              "toKey": {
                "lv": "not_specify",
                "key": "priceBais"
              }
            }
          ],
          "flowUid": "9RLQvpmbGa35"
        },
        {
          "clazz": "net.bzk.flow.model.HttpAction",
          "uid": "3upPLAHw95l6",
          "name": "GetPostionInfo",
          "tryErrorble": false,
          "devBoxVars": {},
          "devFlowVars": {},
          "url": "${binance.proxyHost}proxy",
          "method": "POST",
          "uriVariables": {},
          "body": "{\r\n    \"name\":\"get_position\",\r\n    \"apiKey\": \"${binance.key}\",\r\n    \"secret\": \"${binance.secret}\",\r\n    \"symbol\": \"${symbol}\",\r\n    \"positionSide\":\"LONG\"\r\n}",
          "headers": {},
          "headersFlat": "",
          "key": {
            "lv": "not_specify",
            "key": "posInfo"
          }
        }
      ],
      "links": [
        {
          "clazz": "net.bzk.flow.model.Link",
          "uid": "LpO1DEwUtkpW",
          "name": "Check1HPriceBais",
          "transition": {
            "toBox": "",
            "failEnd": false,
            "endTag": "PriceBaisToSmail",
            "endResultKeys": []
          },
          "condition": {
            "clazz": "net.bzk.flow.model.Condition$ConditionNum",
            "kind": "NONE",
            "left": "${priceBais.val}",
            "right": "-0.000268",
            "type": "greater_equal",
            "next": null
          }
        },
        {
          "clazz": "net.bzk.flow.model.Link",
          "uid": "scCTwzCl5w9O",
          "name": "ToBig",
          "transition": {
            "toBox": "",
            "failEnd": false,
            "endTag": "ToBig",
            "endResultKeys": []
          },
          "condition": {
            "clazz": "net.bzk.flow.model.Condition$ConditionNum",
            "kind": "NONE",
            "left": "${priceBais.val}",
            "right": "-0.0586",
            "type": "lessthan_equal",
            "next": null
          }
        }
      ],
      "vars": {},
      "taskSort": [
        "3upPLAHw95l6",
        "OcPQy555y0Gn",
        "SiPyHUcTzl1K",
        "LpO1DEwUtkpW",
        "scCTwzCl5w9O"
      ],
      "transition": {
        "toBox": "m7IzQZV5oOJ5",
        "failEnd": false,
        "endTag": null,
        "endResultKeys": [
          {
            "lv": "not_specify",
            "key": "priceBais"
          }
        ]
      },
      "whileJudgment": null
    }
  ],
  "entry": {
    "clazz": "net.bzk.flow.model.Entry$PluginEntry",
    "autoRegister": false,
    "requiredKeys": [
      "symbol"
    ],
    "outputKeys": [],
    "boxUid": "1HMjdDMRjAJ0"
  }
}

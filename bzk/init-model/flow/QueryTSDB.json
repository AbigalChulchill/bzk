{
    "clazz": "net.bzk.flow.model.Flow",
    "uid": "9RLQvpmbGa35",
    "logEncryptKey": "1234567890123456",
    "vars": {},
    "varCfgNames": [
        "fin-proxy.json"
    ],
    "threadCfg": {
        "corePoolSize": 10,
        "maximumPoolSize": 50,
        "keepAliveTime": 500,
        "aliveUnit": "MINUTES"
    },
    "name": "QueryTSDB",
    "boxs": [
        {
            "clazz": "net.bzk.flow.model.Box",
            "uid": "xRzWKAi4XvVg",
            "name": "Box",
            "actions": [
                {
                    "clazz": "net.bzk.flow.model.Action$VarModifyAction",
                    "uid": "HIiIMXpt9MDo",
                    "name": "GenQueryBody",
                    "tryErrorble": false,
                    "flatData": [
                        {
                            "key": "queryBody.query",
                            "val": "${tsdbQuery}"
                        }
                    ]
                },
                {
                    "clazz": "net.bzk.flow.model.HttpAction",
                    "uid": "dvmT4XVIVB5Z",
                    "name": "Request",
                    "tryErrorble": false,
                    "url": "${finProxyUrl}/proxy/tsdb",
                    "method": "POST",
                    "uriVariables": {},
                    "body": "${queryBody}",
                    "headers": {},
                    "headersFlat": "",
                    "key": {
                        "lv": "not_specify",
                        "key": "restResult"
                    }
                },
                {
                    "clazz": "net.bzk.flow.model.Action$JSONPathAction",
                    "uid": "mwO7JgHLkhCE",
                    "name": "trim",
                    "tryErrorble": false,
                    "syntax": "$..values",
                    "source": {
                        "lv": "not_specify",
                        "key": "restResult"
                    },
                    "target": {
                        "lv": "not_specify",
                        "key": "listValues"
                    }
                },
                {
                    "clazz": "net.bzk.flow.model.Action$VarModifyAction",
                    "uid": "Py7WIVmpPe2H",
                    "name": "trimValues",
                    "tryErrorble": false,
                    "flatData": [
                        {
                            "key": "trimValues",
                            "val": "!javascript===\nconst list= ${listValues};\nlist[0];"
                        }
                    ]
                },
                {
                    "clazz": "net.bzk.flow.model.Action$VarModifyAction",
                    "uid": "g41uJocNlH7d",
                    "name": "nearVal",
                    "tryErrorble": false,
                    "flatData": [
                        {
                            "key": "nearVal",
                            "val": "!javascript===\n\nconst rateTimeMap = ${trimValues};\n\nconst kv= getAllowKV(rateTimeMap);\n\n\nfunction getAllowKV(rMap){\n    keys= Object.keys(rMap);\n    keys = keys.reverse();\n    for(const key of keys){\n        const v = rMap[key];\n        if(v) {\n            return {\n                time : key,\n                val: v\n            }\n        }\n    }\n    throw new Error('not ok data');\n}\n\nkv;"
                        }
                    ]
                },
                {
                    "clazz": "net.bzk.flow.model.Action$PolyglotAction",
                    "uid": "pokWDrjTQ8z1",
                    "name": "CalcTime",
                    "tryErrorble": false,
                    "code": "const kv= ${nearVal};\r\n\r\nconst keyTime= Date.parse(kv.time);\r\nconst nowAt = nowUtc();\r\n\r\n const dts = (nowAt - keyTime)/(1000*60)  ;\r\n\r\nfunction nowUtc(){\r\n    var date = new Date(); \r\n    var now_utc =  Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\r\n    date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n    return new Date(now_utc);\r\n}\r\n\r\ndts;",
                    "polyglot": "js",
                    "resultLv": "not_specify",
                    "resultKey": "substractMins"
                }
            ],
            "links": [
                {
                    "clazz": "net.bzk.flow.model.Link",
                    "uid": "pIrQbo1n4DYb",
                    "name": "OverTheTime",
                    "transition": {
                        "toBox": "",
                        "endTag": "TheTimeOver",
                        "endResultKeys": []
                    },
                    "condition": {
                        "clazz": "net.bzk.flow.model.Condition$ConditionNum",
                        "kind": "NONE",
                        "left": "${substractMins}",
                        "right": "30",
                        "type": "greater",
                        "next": null
                    }
                }
            ],
            "vars": {},
            "taskSort": [
                "HIiIMXpt9MDo",
                "dvmT4XVIVB5Z",
                "mwO7JgHLkhCE",
                "Py7WIVmpPe2H",
                "g41uJocNlH7d",
                "pokWDrjTQ8z1",
                "pIrQbo1n4DYb"
            ],
            "transition": {
                "toBox": "",
                "endTag": "DONE",
                "endResultKeys": [
                    {
                        "lv": "not_specify",
                        "key": "nearVal"
                    }
                ]
            },
            "whileJudgment": null
        }
    ],
    "entry": {
        "clazz": "net.bzk.flow.model.Entry$PluginEntry",
        "requiredKeys": [
            "tsdbQuery"
        ],
        "outputKeys": [
            "nearVal"
        ],
        "boxUid": "xRzWKAi4XvVg"
    }
}
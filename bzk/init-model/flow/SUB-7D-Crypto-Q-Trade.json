{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "LlXZCvcaZsK8",
  "name" : "SUB-7D-Crypto-Q-Trade",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "b6j6H05VX2Wq",
    "name" : "7D_MINMAX",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "zpYbJsMkkB3R",
      "name" : "RF_Bias_FIXED",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "PeakFinder5",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\na=  from(bucket: \"quote\")\n  |> range(start: -5d)\n   |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |>mean()\n  |> findColumn(\n      fn: (key) => key._field == \"price\",\n      column: \"_value\"\n    )\n\nfrom(bucket: \"quote\")\n  |> range(start: -5d)\n   |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |>map(fn: (r) => ({ r with _value: r._value - a[0] }))  "
      }, {
        "key" : "peakMaxWaitSeconds",
        "val" : "3600"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "macroAmplitudeRate",
        "val" : "0.1"
      } ],
      "outputReflects" : [ {
        "srcKey" : "ans",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "RF_Bias_FIXED"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "L2HlEddXV6pa",
      "name" : "GenVars",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "TH",
        "val" : "!javascript===\nconst rf = ${RFBias5DSYS};\nconst d = '${RF_Bias_FIXED.macro.state}';\nconst macro = rf.macro;\n\nfunction calc(){\n    if(d == 'FALL'){\n        let ans= -macro.nearMin.val / 2;\n        if(ans<0) throw new Error(d+' ans:'+ans);\n        return ans;\n    }\n    if(d== 'RISE'){\n        let ans= -macro.nearMax.val / 2;\n        if(ans>0) throw new Error(d+' ans:'+ans);\n        return ans;\n    }\n    throw new Error('not support='+d);\n}\n\ncalc();\n\n"
      }, {
        "key" : "side7d",
        "val" : "!javascript===\r\nconst th = bzk.g('TH');\r\nconst rf = ${RF_Bias_FIXED};\r\nconst d = rf.macro.state;\r\nconst lastv = rf.last.val;\r\nconst dtime = rf.macro.nearPeak.dtime;\r\nfunction calc(){\r\n    if(!checkTime()) return 'OVER_PICK_'+d;\r\n    if(d == 'FALL'){\r\n        return lastv > th ? 'SELL':'7D_SELL_TH';\r\n    }\r\n    if(d== 'RISE'){\r\n        return lastv < th ? 'BUY':'7D_BUY_TH';\r\n    }\r\n    throw new Error('not support='+d);\r\n    \r\n}\r\n\r\nfunction checkTime(){\r\n    return dtime < (6 * 60 * 60);\r\n}\r\n\r\ncalc();"
      }, {
        "key" : "~trigger_type",
        "val" : "7DM"
      }, {
        "key" : "thth",
        "val" : "0.00268"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "Ae6fhb7iKPwn",
      "name" : "RFBias5DSYS",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "RFBias5DSYS",
        "val" : "!javascript===\nconst rf = bzk.g('Bais.${symbol}.RF.D5');\nrf;"
      } ]
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "rcpWKc8OlITQ",
      "name" : "S_Check",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
        "kind" : "NONE",
        "next" : null,
        "left" : "${side7d}",
        "right" : "SELL",
        "not" : false,
        "type" : "equal"
      },
      "transition" : {
        "toBox" : "Hoh5CNTFiFDi",
        "endTag" : null,
        "failEnd" : false,
        "endResultKeys" : [ ],
        "resultCode" : "SELL"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "tKVLlIi2OOtc",
      "name" : "B_Check",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
        "kind" : "NONE",
        "next" : null,
        "left" : "${side7d}",
        "right" : "BUY",
        "not" : false,
        "type" : "equal"
      },
      "transition" : {
        "toBox" : "Hoh5CNTFiFDi",
        "endTag" : null,
        "failEnd" : false,
        "endResultKeys" : [ ],
        "resultCode" : "BUY"
      }
    } ],
    "vars" : { },
    "taskSort" : [ "zpYbJsMkkB3R", "Ae6fhb7iKPwn", "L2HlEddXV6pa", "rcpWKc8OlITQ", "tKVLlIi2OOtc" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "${symbol} side:${side} side7d: ${side7d}",
      "failEnd" : false,
      "endResultKeys" : [ {
        "lv" : "not_specify",
        "key" : "trigger_type"
      } ],
      "resultCode" : "!javascript===\nconst ans = {\n    state: '${RF_Bias_FIXED.macro.state}',\n    lastv: ${RF_Bias_FIXED.last.val},\n    TH : ${TH}\n};\nans;"
    }
  }, {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "vKSau3Y0hT1i",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "tDr8UTOVkNiO",
      "name" : "RF_V",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "PeakFinder5",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "  from(bucket: \"quote\")\n  |> range(start: -5d)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |> difference()\n  |> movingAverage(n: ${peakPeriodNum}  )\n  |> movingAverage(n: 12  )\n\n"
      }, {
        "key" : "peakMaxWaitSeconds",
        "val" : "3600"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "macroAmplitudeRate",
        "val" : "0.368"
      } ],
      "outputReflects" : [ {
        "srcKey" : "ans",
        "toKey" : {
          "lv" : "run_flow",
          "key" : "direction"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "LtgQk1mGlHfR",
      "name" : "GenTarget",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "~trigger_type",
        "val" : "7DV"
      }, {
        "key" : "~thth",
        "val" : "0.002"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "TA1tlPz4LZ1Z",
      "name" : "FixTarget",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "~side",
        "val" : "!javascript===\n\nconst toSide = '${toSide}';\nconst lastv = ${direction.last.val};\nconst th = ${th};\n\n\nfunction clac(){\n\n    if(toSide == 'SELL'  ){\n        if(lastv > th){\n             return 'SELL';\n        }\n        return 'SELL_TH_BYE';\n    }\n    if(toSide == 'BUY'  ){\n        if(lastv < th){\n            return 'BUY';\n        }\n        return 'BUY_TH_BYE';\n    }\n    throw new Error('no support check');\n}\nclac();"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "V2qjIohc9I3T",
      "name" : "Get_TH",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\nfrom(bucket: \"quote\")\n  |> range(start: -5d)\n   |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |> difference()\n  |> movingAverage(n: int( v: strings.replaceAll(v: \"12h\", t: \"h\", u: \"\"))*12 )\n  |> movingAverage(n: 12  )\n  |>${thFunc}\n  |>map(fn: (r) => ({ r with _value:-r._value/2.00 }))   "
      }, {
        "key" : "vaildMins",
        "val" : "10"
      }, {
        "key" : "skipCount",
        "val" : "0"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "th"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "GDnzn3NYMRJB",
      "name" : "InitVars",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "thFunc",
        "val" : "!javascript===\nconst state = '${direction.macro.state}';\n\nfunction calc(){\n    return state == 'FALL' ? 'min()' : 'max()';\n}\n\ncalc();"
      }, {
        "key" : "toSide",
        "val" : "!javascript===\nconst state = '${direction.macro.state}';\nfunction calc(){\n    return state == 'FALL' ? 'SELL' : 'BUY';\n}\ncalc();"
      } ]
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "BXX48Illzys2",
      "name" : "SELL_Check",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
        "kind" : "NONE",
        "next" : null,
        "left" : "${side}",
        "right" : "SELL",
        "not" : false,
        "type" : "equal"
      },
      "transition" : {
        "toBox" : "Hoh5CNTFiFDi",
        "endTag" : null,
        "failEnd" : false,
        "endResultKeys" : [ ],
        "resultCode" : "SELL"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "tl455y47pObG",
      "name" : "SIDE_ISSUE",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionCode",
        "kind" : "NONE",
        "next" : null,
        "polyglot" : "js",
        "code" : "const toSide = '${toSide}';\r\nconst lastv = ${direction.last.val};\r\nconst th = ${th};\r\n\r\nfunction checkVal(v){\r\n    if(toSide == 'BUY'){\r\n        return v < 0;\r\n    }\r\n    if(toSide == 'SELL'){\r\n        return v > 0;\r\n    }\r\n}\r\n\r\nfunction checkNotOK(){\r\n    const lvc = checkVal(lastv);\r\n    if (!lvc) return true;\r\n    const thc = checkVal(th);\r\n    if(!thc) return true;\r\n    return false;\r\n}\r\n\r\ncheckNotOK();"
      },
      "transition" : {
        "toBox" : "",
        "endTag" : "BYE_SIDE_ISSUE ${toSide}",
        "failEnd" : false,
        "endResultKeys" : [ {
          "lv" : "not_specify",
          "key" : "th"
        }, {
          "lv" : "not_specify",
          "key" : "direction.last.val"
        } ],
        "resultCode" : ""
      }
    }, {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "HS57eKRpsKot",
      "name" : "BUY_Check",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
        "kind" : "NONE",
        "next" : null,
        "left" : "${side}",
        "right" : "BUY",
        "not" : false,
        "type" : "equal"
      },
      "transition" : {
        "toBox" : "Hoh5CNTFiFDi",
        "endTag" : null,
        "failEnd" : false,
        "endResultKeys" : [ ],
        "resultCode" : "BUY"
      }
    } ],
    "vars" : { },
    "taskSort" : [ "tDr8UTOVkNiO", "GDnzn3NYMRJB", "V2qjIohc9I3T", "tl455y47pObG", "LtgQk1mGlHfR", "TA1tlPz4LZ1Z", "BXX48Illzys2", "HS57eKRpsKot" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "b6j6H05VX2Wq",
      "endTag" : null,
      "failEnd" : false,
      "endResultKeys" : [ {
        "lv" : "not_specify",
        "key" : "th"
      }, {
        "lv" : "not_specify",
        "key" : "direction.last.val"
      } ],
      "resultCode" : "!javascript===\nconst ans = {\n    lastv:${direction.last.val}\n};\n\nans;\n"
    }
  }, {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "Hoh5CNTFiFDi",
    "name" : "ORDER",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "gsxIHdLoOV2I",
      "name" : "SellOrder",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "kCmTvvaxfIBr",
      "asynced" : false,
      "inputData" : [ {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "side",
        "val" : "${__pk_result}"
      }, {
        "key" : "guardRate",
        "val" : "0.03"
      }, {
        "key" : "investedRate",
        "val" : "0.18"
      }, {
        "key" : "thth",
        "val" : "${thth}"
      }, {
        "key" : "trigger",
        "val" : "${trigger_type}"
      } ],
      "outputReflects" : [ ]
    } ],
    "links" : [ ],
    "vars" : { },
    "taskSort" : [ "gsxIHdLoOV2I" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "O ${trigger_type} SELL ${symbol}  ${acceleration.val}_${direction.last.val}_${direction.macro.state}",
      "failEnd" : false,
      "endResultKeys" : [ ],
      "resultCode" : ""
    }
  } ],
  "varCfgNames" : [ ],
  "vars" : {
    "symbol" : "BTC",
    "peakPeriodNum" : 144
  },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$PluginEntry",
    "boxUid" : "vKSau3Y0hT1i",
    "autoRegister" : false,
    "requiredKeys" : [ "symbol" ],
    "outputKeys" : [ ]
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}
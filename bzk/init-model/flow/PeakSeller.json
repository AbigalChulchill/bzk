{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "PeakSellerWJ",
  "name" : "PeakSeller",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "JLHJy1PFFHMe",
    "name" : "BOX",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "omQM2kfxc2Cf",
      "name" : "GetMA_15",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "from(bucket: \"quote\")\n  |> range(start: -2h)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |> timedMovingAverage(every: 5m, period: 15m)"
      }, {
        "key" : "vaildMins",
        "val" : "10"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "ma15m"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "A9DLlmqdqWXw",
      "name" : "Get_SellLine",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"date\"\r\ncur=from(bucket: \"quote\")\r\n  |> range(start: -24h)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"realtime\" and\r\n    r.symbol == \"${symbol}\" and\r\n    r._field == \"price\"\r\n  )\r\n  |> map(fn: (r) => ({ r with _time: date.truncate(t: r._time, unit: 5m)    }))\r\n\r\navgv = from(bucket: \"quote\")\r\n  |> range(start: -24h)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"realtime\" and\r\n    r.symbol == \"${symbol}\" and\r\n    r._field == \"price\"\r\n  )\r\n  |> timedMovingAverage(every: 5m, period: ${avgPeriod})\r\n  |> map(fn: (r) => ({ r with _time: date.truncate(t: r._time, unit: 5m)    }))\r\n\r\n\r\n\r\njoin(tables: {cur: cur, avgv: avgv}, on: [\"_time\"])\r\n  |> map(fn: (r) => ({ r with _value: r._value_cur - r._value_avgv   }))\r\n  |> filter(fn: (r) =>\r\n    r._value > 0\r\n  )  \r\n  |> movingAverage(n: 48)"
      }, {
        "key" : "vaildMins",
        "val" : "180"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "sellLine"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "yVZY941QKdCf",
      "name" : "OrderPost",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "02eQyaMwyojZ",
      "asynced" : false,
      "inputData" : [ {
        "key" : "investedRate",
        "val" : "0.03"
      }, {
        "key" : "guardRange",
        "val" : "0.015"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "side",
        "val" : "SELL"
      }, {
        "key" : "currentMove",
        "val" : "0.0001868"
      }, {
        "key" : "triggerAmt",
        "val" : "!javascript===\nconst ans=${amt.val};\nans;"
      }, {
        "key" : "tags",
        "val" : "[\"shortTermSell\"]"
      }, {
        "key" : "rsi",
        "val" : "0.32688"
      }, {
        "key" : "threshold",
        "val" : "${ma15m.val}"
      } ],
      "outputReflects" : [ ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "jWvxY8lUN4Vw",
      "name" : "GetBinance1MinAmt",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"date\"\nt1 = from(bucket: \"quote\")\n  |> range(start: -8h)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r.trade == \"60s\" and\n    r._field == \"totalAmount\"\n  )\n  |> map(fn: (r) => ({ r with _time: date.truncate(t: r._time, unit: 10s)    }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"side\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r.sell + r.buy }))    \n  |> movingAverage(n: 10 )\nt1   "
      }, {
        "key" : "vaildMins",
        "val" : "31"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "amt"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "rvAYFrVWpbxC",
      "name" : "GetPeriodAvg",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "from(bucket: \"quote\")\n  |> range(start: -10h)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |> timedMovingAverage(every: 5m, period: ${avgPeriod})"
      }, {
        "key" : "vaildMins",
        "val" : "20"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "avgv"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "9r7LUAO3eEYU",
      "name" : "",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "from(bucket: \"quote\")\n  |> range(start: -20m)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r._field == \"price\" and\n    r.symbol == \"${symbol}\" \n  )"
      }, {
        "key" : "vaildMins",
        "val" : "15"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "curPrice"
        }
      } ]
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "WJzQ9czYjYNY",
      "name" : "ChekPrice",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionNum",
        "kind" : "NONE",
        "next" : null,
        "left" : "!javascript===\nconst ans= ${curPrice.val} - ${avgv.val} ;\nans;",
        "right" : "${sellLine.val}",
        "type" : "lessthan_equal"
      },
      "transition" : {
        "toBox" : "",
        "endTag" : "PriceToHigh-${symbol}",
        "failEnd" : false,
        "endResultKeys" : [ ]
      }
    } ],
    "vars" : {
      "avgPeriod" : "4h"
    },
    "taskSort" : [ "9r7LUAO3eEYU", "rvAYFrVWpbxC", "A9DLlmqdqWXw", "WJzQ9czYjYNY", "omQM2kfxc2Cf", "jWvxY8lUN4Vw", "yVZY941QKdCf" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "Ordered--${symbol}",
      "failEnd" : false,
      "endResultKeys" : [ ]
    }
  } ],
  "varCfgNames" : [ "binance.json", "fin-proxy.json" ],
  "vars" : {
    "symbol" : "BTC"
  },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$PluginEntry",
    "boxUid" : "JLHJy1PFFHMe",
    "autoRegister" : false,
    "requiredKeys" : [ "symbol" ],
    "outputKeys" : [ ]
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}
{"clazz":"net.bzk.flow.model.Flow","uid":"0OETbdjvKZwR","name":"binanceTradeTSDB","boxs":[{"clazz":"net.bzk.flow.model.Box","uid":"mWgZzKqmq6s3","name":"Box","actions":[{"clazz":"net.bzk.flow.model.HttpAction","uid":"bcYOr1ci1ZHv","name":"getAggregateTradesList","tryErrorble":false,"devBoxVars":{},"devFlowVars":{},"url":"${binance.proxyHost}proxy","uriVariables":{},"body":"{\n    \"name\":\"get_aggregate_trades_list\",\n    \"apiKey\":\"${binance.key}\",\n    \"secret\":\"${binance.secret}\",\n    \"symbol\":\"${symbol}\",\n    \"startTime\":\"${timeBundle.startTime}\",\n    \"endTime\":\"${timeBundle.endTime}\"\n}","method":"POST","headers":{},"headersFlat":"","key":{"lv":"not_specify","key":"apiData"}},{"clazz":"net.bzk.flow.model.Action$PolyglotAction","uid":"cZanf3csDgxc","name":"GenTimeBoundle","tryErrorble":false,"devBoxVars":{},"devFlowVars":{},"code":"var end = new Date();\r\nvar endiso = end.toISOString();\r\nend.setSeconds(end.getSeconds() - 5*60);\r\nvar startiso = end.toISOString();\r\nconsole.log(startiso);\r\nconsole.log(endiso);\r\n\r\nvar ans = {\r\n    'startTime':startiso,\r\n    'endTime':endiso\r\n}\r\n\r\nans","polyglot":"js","resultLv":"not_specify","resultKey":"timeBundle"},{"clazz":"net.bzk.flow.model.Action$PolyglotAction","uid":"wgSLHdynzwM3","name":"PackPayload","tryErrorble":false,"devBoxVars":{},"devFlowVars":{},"code":"const list= ${apiData};\r\nconst ans = [];\r\n\r\n\r\n\r\n\r\n\r\naddBySide('sell',list['sell']);\r\naddBySide('buy',list['buy']);\r\n\r\n\r\nfunction addBySide(side,info){\r\n    ans.push(genPointDto(side,'totalAmount',info['totalAmount'],info['lastAt']));\r\n    ans.push(genPointDto(side,'avgPrice',info['avgPrice'],info['lastAt']));\r\n    ans.push(genPointDto(side,'lastPrice',info['lastPrice'],info['lastAt']));\r\n    ans.push(genPointDto(side,'highPrice',info['highPrice'],info['highPriceAt']));\r\n    ans.push(genPointDto(side,'lowPrice',info['lowPrice'],info['lowPriceAt']));\r\n    ans.push(genPointDto(side,'highAmount',info['highAmount'],info['highAmountAt']));\r\n}\r\n\r\n\r\nfunction genPointDto(side,fd,v,timeAt){\r\n  const row = {\r\n      measurement : 'realtime',\r\n      tags:{\r\n        symbol : \"${symbol}\",\r\n        name : \"${finName}\",\r\n        category:'cryptocurrency',\r\n        source:'binance',\r\n        side:side,\r\n        trade:'5m'\r\n      },\r\n      field: fd,\r\n      val:v,\r\n      time :timeAt\r\n  };\r\n  return row;\r\n}\r\n\r\nans;\r\n","polyglot":"js","resultLv":"not_specify","resultKey":"payload"},{"clazz":"net.bzk.flow.model.HttpAction","uid":"F2vKclkHFx6s","name":"submit","tryErrorble":false,"devBoxVars":{},"devFlowVars":{},"url":"${finProxyUrl}/proxy/tsdb/insert/multiple","uriVariables":{},"body":"${payload}","method":"POST","headers":{},"headersFlat":"","key":{"lv":"not_specify","key":"insertDBResult"}}],"links":[],"vars":{},"taskSort":["cZanf3csDgxc","bcYOr1ci1ZHv","wgSLHdynzwM3","F2vKclkHFx6s"],"whileJudgment":null,"transition":{"toBox":"","endTag":"TODO Why","failEnd":false,"endResultKeys":[]}}],"varCfgNames":["binance.json","fin-proxy.json"],"vars":{"symbol":"BTC","finName":"bitcoin"},"entry":{"clazz":"net.bzk.flow.model.Entry$FixedRateEntry","boxUid":"mWgZzKqmq6s3","autoRegister":true,"period":5,"unit":"MINUTES","initialDelay":0},"logEncryptKey":"1234567890123456","threadCfg":{"corePoolSize":10,"maximumPoolSize":50,"keepAliveTime":500,"aliveUnit":"MINUTES"}}
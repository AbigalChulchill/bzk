{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "dcz4xRZ3fSqO",
  "name" : "EVENT-Daily-Analytics",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "1wUyYaYvmMT6",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "rY7TvGnZwOea",
      "name" : "Fetch30DBias",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\nfrom(bucket: \"quote\")\n  |> range(start: -60d)\n  |> filter(fn: (r) =>\n    r._measurement == \"daily\" and\n    r.valmean == \"open\" and\n    r.symbol == \"${symbol}\"\n  )\n  |> map(fn: (r) => ({ r with cp: r._value   }))\n  |> movingAverage(n: int( v: strings.replaceAll(v: \"30d\", t: \"d\", u: \"\")) )\n  |> map(fn: (r) => ({ r with _value: (r.cp-r._value)/r._value   }))\n  |> map(fn: (r) => ({ r with temp: r._value   }))  "
      }, {
        "key" : "vaildMins",
        "val" : "!javascript===\n60*24*2"
      }, {
        "key" : "skipCount",
        "val" : "0"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "run_sys",
          "key" : "d30Bais.${symbol}"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "nVwT8uOGqLIQ",
      "name" : "LoopGen",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "flatData" : [ {
        "key" : "symbol",
        "val" : "!javascript===\nconst sbs = ${symbols};\nconst idx = ${symbolIdx};\nconst sb = sbs[idx];\nsb;"
      }, {
        "key" : "symbolIdx",
        "val" : "!javascript===\n${symbolIdx}+1;"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "59IVt362bqIn",
      "name" : "FetchLastQuote",
      "tryErrorble" : false,
      "enable" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "minLogLv" : "NONE",
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "from(bucket: \"quote\")\n  |> range(start: -6d)\n  |> filter(fn: (r) =>\n    r._measurement == \"daily\" and\n    r.valmean == \"open\" and\n    r.symbol == \"${symbol}\"\n  )"
      }, {
        "key" : "vaildMins",
        "val" : "!javascript===\n60*24*2"
      }, {
        "key" : "skipCount",
        "val" : "0"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "run_sys",
          "key" : "lastQuote.${symbol}"
        }
      } ]
    } ],
    "links" : [ ],
    "vars" : {
      "symbolIdx" : 0
    },
    "taskSort" : [ "nVwT8uOGqLIQ", "rY7TvGnZwOea", "59IVt362bqIn" ],
    "whileJudgment" : {
      "clazz" : "net.bzk.flow.model.Condition$ConditionNum",
      "kind" : "NONE",
      "next" : null,
      "left" : "${symbolIdx}",
      "right" : "!javascript===\nconst sbs = ${symbols};\nconst len= sbs.length;\nlen;",
      "type" : "lessthan"
    },
    "transition" : {
      "toBox" : "",
      "endTag" : "RunALL",
      "failEnd" : false,
      "endResultKeys" : [ ],
      "resultCode" : ""
    },
    "minLogLv" : "DEBUG"
  } ],
  "varCfgNames" : [ "crypto-symbol.json" ],
  "vars" : { },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$EventEntry",
    "boxUid" : "1wUyYaYvmMT6",
    "autoRegister" : true,
    "condition" : {
      "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
      "kind" : "NONE",
      "next" : null,
      "left" : "${data}",
      "right" : "CronFetchCMC",
      "not" : false,
      "type" : "equal"
    }
  },
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  },
  "version" : 2
}
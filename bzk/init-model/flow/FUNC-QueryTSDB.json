{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "9RLQvpmbGa35",
  "name" : "FUNC-QueryTSDB",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "xRzWKAi4XvVg",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "HIiIMXpt9MDo",
      "name" : "GenQueryBody",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "queryBody.query",
        "val" : "${tsdbQuery}"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "dvmT4XVIVB5Z",
      "name" : "Request",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "url" : "${finProxyUrl}/proxy/tsdb",
      "uriVariables" : { },
      "body" : "${queryBody}",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "restResult"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$JSONPathAction",
      "uid" : "mwO7JgHLkhCE",
      "name" : "trim",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "syntax" : "$..values",
      "source" : {
        "lv" : "not_specify",
        "key" : "restResult"
      },
      "target" : {
        "lv" : "not_specify",
        "key" : "listValues"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "Py7WIVmpPe2H",
      "name" : "trimValues",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "trimValues",
        "val" : "!javascript===\nconst list= ${listValues};\nlist[0];"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "g41uJocNlH7d",
      "name" : "nearVal",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "nearVal",
        "val" : "!javascript===\n\nconst rateTimeMap = ${trimValues};\nlet skipCount = ${skipCount};\n\nconst kv= getAllowKV(rateTimeMap);\n\n\nfunction getAllowKV(rMap){\n    keys= Object.keys(rMap);\n    keys = keys.reverse();\n    for(const key of keys){\n\n        if(skipCount>0){\n            skipCount--;\n            continue;\n        }\n\n        const v = rMap[key];\n        \n        if(v) {\n            return {\n                time : key,\n                val: v\n            }\n        }\n    }\n    throw new Error('not ok data');\n}\n\nkv;"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$PolyglotAction",
      "uid" : "pokWDrjTQ8z1",
      "name" : "CalcTime",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "code" : "const kv= ${nearVal};\r\n\r\nconst keyTime= Date.parse(kv.time);\r\nconst nowAt = nowUtc();\r\n\r\n const dts = (nowAt - keyTime)/(1000*60)  ;\r\n\r\nfunction nowUtc(){\r\n    var date = new Date(); \r\n    var now_utc =  Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\r\n    date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n    return new Date(now_utc);\r\n}\r\n\r\ndts;",
      "polyglot" : "js",
      "resultLv" : "not_specify",
      "resultKey" : "substractMins"
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "pIrQbo1n4DYb",
      "name" : "OverTheTime",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionNum",
        "kind" : "NONE",
        "next" : null,
        "left" : "${substractMins}",
        "right" : "${vaildMins}",
        "type" : "greater"
      },
      "transition" : {
        "toBox" : "",
        "endTag" : "TheTimeOver",
        "failEnd" : true,
        "endResultKeys" : [ ],
        "resultCode" : ""
      }
    } ],
    "vars" : { },
    "taskSort" : [ "HIiIMXpt9MDo", "dvmT4XVIVB5Z", "mwO7JgHLkhCE", "Py7WIVmpPe2H", "g41uJocNlH7d", "pokWDrjTQ8z1", "pIrQbo1n4DYb" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "DONE",
      "failEnd" : false,
      "endResultKeys" : [ {
        "lv" : "not_specify",
        "key" : "nearVal"
      }, {
        "lv" : "not_specify",
        "key" : "trimValues"
      } ],
      "resultCode" : ""
    }
  } ],
  "varCfgNames" : [ "fin-proxy.json" ],
  "vars" : {
    "vaildMins" : 30,
    "skipCount" : 0
  },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$PluginEntry",
    "boxUid" : "xRzWKAi4XvVg",
    "autoRegister" : false,
    "requiredKeys" : [ "tsdbQuery", "vaildMins", "skipCount" ],
    "outputKeys" : [ "nearVal" ]
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}
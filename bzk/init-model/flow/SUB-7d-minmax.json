{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "C06bTWXsMh7D",
  "name" : "SUB-7d-minmax",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "2yrIrBRsEZHo",
    "name" : "PrepareData",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$NodejsAction",
      "uid" : "AGrVuvJGFL5G",
      "name" : "Action",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "alwayCleanWorkDir" : false,
      "code" : "console.log($bzk.init)",
      "installs" : [ ],
      "dependencies" : {
        "moment" : "^2.26.0"
      },
      "devDependencies" : { }
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "TvxsY0dT0Zrd",
      "name" : "Fetch7DFixedBias",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\r\na=  from(bucket: \"quote\")\r\n  |> range(start: -7d)\r\n   |> filter(fn: (r) =>\r\n    r._measurement == \"realtime\" and\r\n    r.symbol == \"BTC\" and\r\n    r._field == \"price\"\r\n  )\r\n  |>mean()\r\n  |> findColumn(\r\n      fn: (key) => key._field == \"price\",\r\n      column: \"_value\"\r\n    )\r\n\r\nfrom(bucket: \"quote\")\r\n  |> range(start: -7d)\r\n   |> filter(fn: (r) =>\r\n    r._measurement == \"realtime\" and\r\n    r.symbol == \"${symbol}\" and\r\n    r._field == \"price\"\r\n  )\r\n  |>map(fn: (r) => ({ r with _value: r._value - a[0] }))  "
      }, {
        "key" : "vaildMins",
        "val" : "10"
      }, {
        "key" : "skipCount",
        "val" : "0"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "D7FixedBias"
        }
      } ]
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "IAa9lfUDXHRo",
      "name" : "TODOLink",
      "condition" : null,
      "transition" : {
        "toBox" : "",
        "endTag" : "TestEnd",
        "failEnd" : false,
        "endResultKeys" : [ ],
        "resultCode" : ""
      }
    } ],
    "vars" : { },
    "taskSort" : [ "AGrVuvJGFL5G", "IAa9lfUDXHRo", "TvxsY0dT0Zrd" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "TODO Why",
      "failEnd" : false,
      "endResultKeys" : [ ],
      "resultCode" : ""
    }
  } ],
  "varCfgNames" : [ ],
  "vars" : { },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$FixedRateEntry",
    "boxUid" : "2yrIrBRsEZHo",
    "autoRegister" : false,
    "period" : -1,
    "unit" : "SECONDS",
    "initialDelay" : 2
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}
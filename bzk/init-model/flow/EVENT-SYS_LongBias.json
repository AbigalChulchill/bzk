{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "h6LMt4UTDR8U",
  "name" : "EVENT-SYS_LongBias",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "d6qUszCxvhR6",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "WP5kSBhQyCAK",
      "name" : "RF_5DBais",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "PeakFinder5",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\nfrom(bucket: \"quote\")\n  |> range(start: -50d)\n  |> filter(fn: (r) =>\n    r._measurement == \"daily\" and\n    r.valmean == \"close\" and\n    r.symbol == \"${symbol}\"\n  )\n  |> map(fn: (r) => ({ r with cp: r._value   }))\n  |> movingAverage(n: int( v: strings.replaceAll(v: \"5d\", t: \"d\", u: \"\")) )\n  |> map(fn: (r) => ({ r with _value: r.cp-r._value   }))\n  |> movingAverage(n: int( v: strings.replaceAll(v: \"5d\", t: \"d\", u: \"\")) )\n"
      }, {
        "key" : "peakMaxWaitSeconds",
        "val" : "!javascript===\nconst ans = 60*60*24*3;\nans;"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "macroAmplitudeRate",
        "val" : "0.1"
      } ],
      "outputReflects" : [ {
        "srcKey" : "ans",
        "toKey" : {
          "lv" : "run_sys",
          "key" : "Bais.${symbol}.RF.D5"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "244CIjUbhzKo",
      "name" : "Vars",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "symbol",
        "val" : "!javascript===\nconst sbs = ${symbols};\nconst idx = ${symbolIdx};\nconst sb = sbs[idx];\nsb;"
      }, {
        "key" : "symbolIdx",
        "val" : "!javascript===\n${symbolIdx}+1"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "VE0ZPTVqBAYL",
      "name" : "RF_Fixed_120DBais_MA15D",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "PeakFinder5",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "import \"strings\"\na = from(bucket: \"quote\")\n  |> range(start: -120d)\n  |> filter(fn: (r) =>\n    r._measurement == \"daily\" and\n    r.valmean == \"open\" and\n    r.symbol == \"${symbol}\"\n  )\n  |>mean()\n  |> findColumn(\n      fn: (key) => key.valmean == \"open\",\n      column: \"_value\"\n    )\n\n\nfrom(bucket: \"quote\")\n  |> range(start: -120d)\n  |> filter(fn: (r) =>\n    r._measurement == \"daily\" and\n    r.valmean == \"open\" and\n    r.symbol == \"${symbol}\"\n  )\n  |>map(fn: (r) => ({ r with _value: r._value - a[0] }))  \n  |> map(fn: (r) => ({ r with alias:\"orignal\" }))    \n  |> movingAverage(n: int( v: strings.replaceAll(v: \"15d\", t: \"d\", u: \"\")) )\n  "
      }, {
        "key" : "peakMaxWaitSeconds",
        "val" : "!javascript===\nconst ans = 60*60*24*8;\nans;"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "macroAmplitudeRate",
        "val" : "0.02"
      }, {
        "key" : "calcRated",
        "val" : "true"
      } ],
      "outputReflects" : [ {
        "srcKey" : "ans",
        "toKey" : {
          "lv" : "run_sys",
          "key" : "Bais.${symbol}.Fixed.120D.RF.MA15D"
        }
      }, {
        "srcKey" : "rate",
        "toKey" : {
          "lv" : "run_sys",
          "key" : "Bais.${symbol}.Fixed.120D.RF.MA15D.OrderRate"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "lIOOCcM9zfPN",
      "name" : "OrganizeVars",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "TEST",
        "val" : "!javascript===\nconst rf = bzk.g(\"%Bais.${symbol}.Fixed.120D.RF.MA15D\");\nrf;\n\n"
      } ]
    } ],
    "links" : [ ],
    "vars" : {
      "symbolIdx" : 0
    },
    "taskSort" : [ "244CIjUbhzKo", "WP5kSBhQyCAK", "VE0ZPTVqBAYL", "lIOOCcM9zfPN" ],
    "whileJudgment" : {
      "clazz" : "net.bzk.flow.model.Condition$ConditionNum",
      "kind" : "NONE",
      "next" : null,
      "left" : "${symbolIdx}",
      "right" : "!javascript===\nconst sbs = ${symbols};\nconst len= sbs.length\nlen",
      "type" : "lessthan"
    },
    "transition" : {
      "toBox" : "",
      "endTag" : "DONE",
      "failEnd" : false,
      "endResultKeys" : [ ]
    }
  } ],
  "varCfgNames" : [ "crypto-symbol.json" ],
  "vars" : { },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$EventEntry",
    "boxUid" : "d6qUszCxvhR6",
    "autoRegister" : true,
    "condition" : {
      "clazz" : "net.bzk.flow.model.Condition$ConditionTxt",
      "kind" : "NONE",
      "next" : null,
      "left" : "${data}",
      "right" : "CronFetchCMC",
      "not" : false,
      "type" : "equal"
    }
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}
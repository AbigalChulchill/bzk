{
  "clazz" : "net.bzk.flow.model.Flow",
  "uid" : "02eQyaMwyojZ",
  "name" : "OrderBinance ",
  "boxs" : [ {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "5ONyW8KpDZA0",
    "name" : "ToOrder",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "Q9Ov6OSqN0n5",
      "name" : "GetMA_15",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "9RLQvpmbGa35",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "from(bucket: \"quote\")\n  |> range(start: -2h)\n  |> filter(fn: (r) =>\n    r._measurement == \"realtime\" and\n    r.symbol == \"${symbol}\" and\n    r._field == \"price\"\n  )\n  |> timedMovingAverage(every: 5m, period: 15m)"
      }, {
        "key" : "vaildMins",
        "val" : "10"
      }, {
        "key" : "skipCount",
        "val" : "1"
      } ],
      "outputReflects" : [ {
        "srcKey" : "nearVal",
        "toKey" : {
          "lv" : "not_specify",
          "key" : "ma15m"
        }
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "N3uy8bAUKMM0",
      "name" : "ListRecentOrders",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "url" : "${binance.proxyHost}proxy",
      "uriVariables" : { },
      "body" : "{\n  \"name\": \"get_recent_trades_list\",\n  \"apiKey\":\"${binance.key}\",\n  \"secret\":\"${binance.secret}\",\n  \"symbol\": \"${symbol}\",\n  \"side\": \"${side}\",\n  \"timeMaped\":true,\n  \"limit\":1000\n}",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "recentOrders"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$SubFlowAction",
      "uid" : "HORt3eoZKjII",
      "name" : "CalcPeak",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flowUid" : "PeakFinder5",
      "asynced" : false,
      "inputData" : [ {
        "key" : "tsdbQuery",
        "val" : "NONE"
      }, {
        "key" : "peakMaxWaitSeconds",
        "val" : "3"
      }, {
        "key" : "symbol",
        "val" : "${symbol}"
      }, {
        "key" : "timeValMap",
        "val" : "!javascript===\nconst info = ${recentOrders};\nconst side = '${side}';\n\nfunction fetch(){\n    return side == 'BUY' ? info.buy.timeValMap :  info.sell.timeValMap;\n}\nfetch();"
      }, {
        "key" : "baseVal",
        "val" : "${ma15m.val}"
      } ],
      "outputReflects" : [ {
        "srcKey" : "ans",
        "toKey" : {
          "lv" : "run_flow",
          "key" : "peakInfo"
        }
      } ]
    } ],
    "links" : [ {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "9CDUn4IFHhHD",
      "name" : "BaseLine",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionCode",
        "kind" : "NONE",
        "next" : null,
        "polyglot" : "js",
        "code" : "const side ='${side}';\r\nconst baseLine = ${ma15m.val};\r\nconst lastv = ${peakInfo.last.val};\r\n\r\nfunction calc(){\r\n    return side == 'BUY' ? lastv >= baseLine : lastv <= baseLine;\r\n}\r\n\r\ncalc();"
      },
      "transition" : {
        "toBox" : "",
        "endTag" : "BaseBYE_${symbol} ${side}> B:${ma15m.val} L:${peakInfo.last.val}",
        "failEnd" : false,
        "endResultKeys" : [ ]
      }
    }, {
      "clazz" : "net.bzk.flow.model.Link",
      "uid" : "5TnlNO0U4Npj",
      "name" : "direction",
      "condition" : {
        "clazz" : "net.bzk.flow.model.Condition$ConditionCode",
        "kind" : "NONE",
        "next" : null,
        "polyglot" : "js",
        "code" : "const side ='${side}';\r\nconst microD = '${peakInfo.micro.state}';\r\nconst macroD = '${peakInfo.macro.state}';\r\n\r\nfunction calc(){\r\n    if(macroD != macroD) return true;\r\n    if (side == 'BUY' && microD == 'FALL') return true;\r\n    if (side == 'SELL' && microD == 'RISE') return true;\r\n    return false;\r\n}\r\n\r\ncalc();"
      },
      "transition" : {
        "toBox" : "",
        "endTag" : "d_bye ${symbol} ${side} > mi:${peakInfo.micro.state} ma: ${peakInfo.macro.state}",
        "failEnd" : false,
        "endResultKeys" : [ ]
      }
    } ],
    "vars" : { },
    "taskSort" : [ "Q9Ov6OSqN0n5", "N3uy8bAUKMM0", "HORt3eoZKjII", "9CDUn4IFHhHD", "5TnlNO0U4Npj" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "htivUO7YKtyD",
      "endTag" : null,
      "failEnd" : false,
      "endResultKeys" : [ ]
    }
  }, {
    "clazz" : "net.bzk.flow.model.Box",
    "uid" : "htivUO7YKtyD",
    "name" : "Box",
    "actions" : [ {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "3upPLAHw95l6",
      "name" : "GetPostionInfo",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "url" : "${binance.proxyHost}proxy",
      "uriVariables" : { },
      "body" : "{\r\n    \"name\":\"get_position\",\r\n    \"apiKey\": \"${binance.key}\",\r\n    \"secret\": \"${binance.secret}\",\r\n    \"symbol\": \"${symbol}\"\r\n}",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "posInfo"
      }
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "OcPQy555y0Gn",
      "name" : "cancel_by_filter",
      "tryErrorble" : false,
      "devBoxVars" : {
        "symbol" : "EOS",
        "posInfo" : [ {
          "entryPrice" : 0,
          "isAutoAddMargin" : true,
          "leverage" : 75,
          "maxNotionalValue" : 10000,
          "liquidationPrice" : 0,
          "markPrice" : 6.41487051,
          "positionAmt" : 0,
          "symbol" : "EOSUSDT",
          "unrealizedProfit" : 0,
          "marginType" : "cross",
          "isolatedMargin" : 0,
          "positionSide" : "BOTH"
        }, {
          "entryPrice" : 0,
          "isAutoAddMargin" : true,
          "leverage" : 75,
          "maxNotionalValue" : 10000,
          "liquidationPrice" : 0,
          "markPrice" : 6.41487051,
          "positionAmt" : 0,
          "symbol" : "EOSUSDT",
          "unrealizedProfit" : 0,
          "marginType" : "cross",
          "isolatedMargin" : 0,
          "positionSide" : "LONG"
        }, {
          "entryPrice" : 6.662,
          "isAutoAddMargin" : true,
          "leverage" : 75,
          "maxNotionalValue" : 10000,
          "liquidationPrice" : 6.70970429,
          "markPrice" : 6.41487051,
          "positionAmt" : -110.5,
          "symbol" : "EOSUSDT",
          "unrealizedProfit" : 27.30780864,
          "marginType" : "cross",
          "isolatedMargin" : 0,
          "positionSide" : "SHORT"
        } ]
      },
      "devFlowVars" : { },
      "url" : "${binance.proxyHost}proxy",
      "uriVariables" : { },
      "body" : "!javascript===\r\nconst payload= {\r\n  \"name\": \"cancel_by_filter\",\r\n  \"apiKey\": \"${binance.key}\",\r\n  \"secret\": \"${binance.secret}\",\r\n  \"symbol\": \"${symbol}\"\r\n};\r\n\r\nconst pinfolist = ${posInfo};\r\nlet amt = 0;\r\n\r\nfor (let p of pinfolist) {\r\n  amt += Math.abs(p.positionAmt);\r\n}\r\n\r\nif(amt>0){\r\n    payload['notOrderType']='STOP_MARKET';\r\n}\r\n\r\npayload;",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "postResult"
      }
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "OcPQySOCy0Gn",
      "name" : "PostOrder",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "url" : "${binance.proxyHost}proxy",
      "uriVariables" : { },
      "body" : "${body}",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "",
      "key" : {
        "lv" : "not_specify",
        "key" : "postResult"
      }
    }, {
      "clazz" : "net.bzk.flow.model.Action$MailAction",
      "uid" : "fzgczwZFFaF2",
      "name" : "NotifyMail",
      "tryErrorble" : true,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "smtpHost" : "\"smtp.gmail.com\"",
      "smtpPort" : "465",
      "username" : "${gmail.username}",
      "password" : "${gmail.password}",
      "toMail" : "a29243004@gmail.com",
      "subject" : "Order CMC",
      "body" : "    name=\"post_order\" \\n\\r\n    investedRate=${investedRate} \\n\\r\n    guardRange=${guardRange} \\n\\r\n    quote=${postResult.quantity} \\n\\r\n    symbol=\"${symbol}\" \\n\\r\n    selled=${selled} \\n\\r"
    }, {
      "clazz" : "net.bzk.flow.model.Action$VarModifyAction",
      "uid" : "3H1IkGkleZp5",
      "name" : "GenBody",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "flatData" : [ {
        "key" : "body",
        "val" : "!javascript===\nconst side ='${side}';\n\nlet pd = {\n    \"symbol\": \"${symbol}\",\n    \"investedRate\": ${investedRate},\n    \"apiKey\": \"${binance.key}\",\n    \"secret\": \"${binance.secret}\",\n    \"selled\": side == 'SELL',\n    \"name\": \"post_order\",\n    \"guardRange\": ${guardRange},\n    \"currentMove\": ${currentMove}\n};\npd;"
      }, {
        "key" : "body.tags",
        "val" : "${tags}"
      } ]
    }, {
      "clazz" : "net.bzk.flow.model.HttpAction",
      "uid" : "iD0dtfzuxhXl",
      "name" : "RecordTSDB",
      "tryErrorble" : false,
      "devBoxVars" : { },
      "devFlowVars" : { },
      "url" : "${finProxyUrl}/proxy/tsdb/insert/multiple",
      "uriVariables" : { },
      "body" : "!javascript===\n\nconst sbl = '${symbol}';\nconst side = '${side}';\nconst postResult = ${postResult};\nconst  now = new Date();\nconst nowiso = now.toISOString();\n\nlet ans = [];\n\nfunction genPointDto(fd,v){\n  const row = {\n      measurement : 'order-measurement',\n      tags:{\n        \"symbol\" : sbl,        \n        \"category\":'cryptocurrency',\n        \"source\":'binance',\n        \"side\":side,\n      },\n      field: fd,\n      val:v,\n      time :nowiso\n  };\n  return row;\n}\n\nans.push(genPointDto('price',postResult.price));\nans.push(genPointDto('stopPrice',postResult.stopPrice));\nans.push(genPointDto('quantity',postResult.quantity));\n\nans;",
      "method" : "POST",
      "headers" : { },
      "headersFlat" : "{}",
      "key" : {
        "lv" : "not_specify",
        "key" : "tsdbPosted"
      }
    } ],
    "links" : [ ],
    "vars" : { },
    "taskSort" : [ "3upPLAHw95l6", "OcPQy555y0Gn", "fzgczwZFFaF2", "3H1IkGkleZp5", "OcPQySOCy0Gn", "iD0dtfzuxhXl" ],
    "whileJudgment" : null,
    "transition" : {
      "toBox" : "",
      "endTag" : "${symbol} ${side}",
      "failEnd" : false,
      "endResultKeys" : [ ]
    }
  } ],
  "varCfgNames" : [ "binance.json", "mail.json", "fin-proxy.json" ],
  "vars" : {
    "symbol" : "ETC",
    "investedRate" : 0.1,
    "side" : "SELL",
    "currentMove" : 0.6,
    "guardRange" : 0.05
  },
  "entry" : {
    "clazz" : "net.bzk.flow.model.Entry$PluginEntry",
    "boxUid" : "5ONyW8KpDZA0",
    "autoRegister" : false,
    "requiredKeys" : [ "side", "symbol", "investedRate", "guardRange", "currentMove", "tags" ],
    "outputKeys" : [ ]
  },
  "logEncryptKey" : "1234567890123456",
  "threadCfg" : {
    "corePoolSize" : 10,
    "maximumPoolSize" : 50,
    "keepAliveTime" : 500,
    "aliveUnit" : "MINUTES"
  }
}